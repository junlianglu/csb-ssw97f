{"version":3,"sources":["Contexts.js","Counter.js","ItemList.js","TdList.js","ContentContainer.js","App.js","index.js"],"names":["ContentContainerContext","createContext","CountContext","TdListContext","useTdList","useContext","ContentContainerProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","isCounterVisible","setIsCounterVisible","_useState3","_useState4","isTdListVisible","setIsTdListVisible","console","log","_jsx","Provider","value","toggleIsCounterVisible","visible","toggleIsTdListVisible","CountProvider","_ref2","_useState5","_useState6","count","setCount","_useState7","_useState8","timerButtonVal","setTimerButtonVal","_useState9","_useState10","intervalId","setIntervalId","inc","dec","incIfOdd","incDelay","delay","setTimeout","toggleAutoInc","setInterval","clearInterval","TdListProvider","_ref3","_useState11","_useState12","inputVal","setInputVal","_useState13","_useState14","itemList","setItemList","_useState15","_useState16","sortBy","setSortBy","add","concat","_toConsumableArray","delAt","removedIdx","filter","val","i","handleOnChangeInputVal","e","target","handleOnChangeSortBy","prevItemList","sort","reverse","Counter","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","_jsxs","Count","Consumer","_Fragment","ButtonRow","button1Name","button2Name","button1Handler","button2Handler","AutoIncButton","React","PureComponent","_React$PureComponent2","_super2","_React$PureComponent3","_super3","_this$props","this","props","onClick","_React$PureComponent4","_super4","ItemList","memo","SortBy","map","Item","_useTdList2","onChange","TdList","InputField","_useTdList","HOC","Component","_class","visibleHandler","rest","_objectWithoutProperties","_excluded","className","type","checked","_objectSpread","HOCCounter","HOCTdList","ContentContainer","_useContentContainer","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.65f9c9da.chunk.js","sourcesContent":["import { useState, createContext, useContext, memo } from \"react\";\r\n\r\nconst ContentContainerContext = createContext();\r\nconst CountContext = createContext();\r\nconst TdListContext = createContext();\r\n\r\nconst useContentContainer = () => useContext(ContentContainerContext);\r\nconst useCount = () => useContext(CountContext);\r\nconst useTdList = () => useContext(TdListContext);\r\n\r\nfunction ContentContainerProvider({ children }) {\r\n  const [isCounterVisible, setIsCounterVisible] = useState(true);\r\n  const [isTdListVisible, setIsTdListVisible] = useState(true);\r\n  const toggleIsCounterVisible = () =>\r\n    setIsCounterVisible((visible) => !visible);\r\n  const toggleIsTdListVisible = () => setIsTdListVisible((visible) => !visible);\r\n  console.log(\"ContentContainerProvider Rendering\");\r\n  return (\r\n    <ContentContainerContext.Provider\r\n      value={{\r\n        isCounterVisible: isCounterVisible,\r\n        isTdListVisible: isTdListVisible,\r\n        toggleIsCounterVisible: toggleIsCounterVisible,\r\n        toggleIsTdListVisible: toggleIsTdListVisible\r\n      }}\r\n    >\r\n      {children}\r\n    </ContentContainerContext.Provider>\r\n  );\r\n}\r\n\r\nfunction CountProvider({ children }) {\r\n  const [count, setCount] = useState(0);\r\n  const [timerButtonVal, setTimerButtonVal] = useState(\"Start\");\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const dec = () => setCount((count) => count - 1);\r\n  const inc = () => setCount((count) => count + 1);\r\n  const incIfOdd = () => count % 2 && inc();\r\n  const incDelay = (delay) => setTimeout(inc, delay * 1000);\r\n  const toggleAutoInc = () => {\r\n    if (timerButtonVal === \"Start\") {\r\n      setTimerButtonVal(\"Stop\");\r\n      setIntervalId(setInterval(inc, 1000));\r\n    } else {\r\n      setTimerButtonVal(\"Start\");\r\n      clearInterval(intervalId);\r\n    }\r\n  };\r\n  console.log(\"CountProvider Rendering\");\r\n  return (\r\n    <CountContext.Provider\r\n      value={{\r\n        count: count,\r\n        dec: dec,\r\n        inc: inc,\r\n        incIfOdd: incIfOdd,\r\n        incDelay: incDelay,\r\n        timerButtonVal: timerButtonVal,\r\n        toggleAutoInc: toggleAutoInc\r\n      }}\r\n    >\r\n      {children}\r\n    </CountContext.Provider>\r\n  );\r\n}\r\n\r\nfunction TdListProvider({ children }) {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const [itemList, setItemList] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const handleOnChangeInputVal = (e) => setInputVal(e.target.value);\r\n  const add = () => {\r\n    setItemList((itemList) => [...itemList, inputVal]);\r\n    setInputVal(\"\");\r\n  };\r\n  const delAt = (removedIdx) =>\r\n    setItemList((itemList) => itemList.filter((val, i) => i !== removedIdx));\r\n  const handleOnChangeSortBy = (e) => {\r\n    const sortBy = e.target.value;\r\n    setSortBy(sortBy);\r\n    if (sortBy) {\r\n      setItemList((prevItemList) => {\r\n        const itemList = [...prevItemList];\r\n        itemList.sort();\r\n        if (sortBy === \"Z-A\") {\r\n          itemList.reverse();\r\n        }\r\n        return itemList;\r\n      });\r\n    }\r\n  };\r\n  console.log(\"TdListProvider Rendering\");\r\n  return (\r\n    <TdListContext.Provider\r\n      value={{\r\n        inputVal: inputVal,\r\n        itemList: itemList,\r\n        sortBy: sortBy,\r\n        add: add,\r\n        delAt: delAt,\r\n        handleOnChangeInputVal: handleOnChangeInputVal,\r\n        handleOnChangeSortBy: handleOnChangeSortBy\r\n      }}\r\n    >\r\n      {children}\r\n    </TdListContext.Provider>\r\n  );\r\n}\r\n\r\nexport { ContentContainerContext, CountContext, TdListContext };\r\nexport { CountProvider, useCount };\r\nexport { TdListProvider, useTdList };\r\nexport { ContentContainerProvider, useContentContainer };\r\n","import React, { memo } from \"react\";\r\nimport { useCount } from \"./Contexts\";\r\nimport { CountContext } from \"./Contexts\";\r\n\r\nclass Counter extends React.PureComponent {\r\n  render() {\r\n    console.log(\"Counter Rendering\");\r\n    return (\r\n      <div>\r\n        <Count />\r\n        <CountContext.Consumer>\r\n          {({ dec, inc, incIfOdd, incDelay }) => (\r\n            <>\r\n              <ButtonRow\r\n                button1Name=\"-\"\r\n                button2Name=\"+\"\r\n                button1Handler={dec}\r\n                button2Handler={inc}\r\n              />\r\n              <ButtonRow\r\n                button1Name=\"+ (if odd)\"\r\n                button2Name=\"+ (delay 1s)\"\r\n                button1Handler={incIfOdd}\r\n                button2Handler={() => incDelay(1)}\r\n              />\r\n            </>\r\n          )}\r\n        </CountContext.Consumer>\r\n        <AutoIncButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Count extends React.PureComponent {\r\n  render() {\r\n    console.log(\"Count Rendering\");\r\n    return (\r\n      <CountContext.Consumer>\r\n        {({ count }) => <h1>{count}</h1>}\r\n      </CountContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nclass ButtonRow extends React.PureComponent {\r\n  render() {\r\n    console.log(\"ButtonRow Rendering\");\r\n    const {\r\n      button1Name,\r\n      button2Name,\r\n      button1Handler,\r\n      button2Handler\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={button1Handler}>{button1Name}</button>\r\n        <button onClick={button2Handler}>{button2Name}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutoIncButton extends React.PureComponent {\r\n  render() {\r\n    console.log(\"AutoIncButton Rendering\");\r\n    return (\r\n      <CountContext.Consumer>\r\n        {({ timerButtonVal, toggleAutoInc }) => (\r\n          <button onClick={toggleAutoInc}>{timerButtonVal}</button>\r\n        )}\r\n      </CountContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { memo } from \"react\";\r\nimport { useTdList } from \"./Contexts\";\r\n\r\nconst ItemList = memo((props) => {\r\n  const { itemList } = useTdList();\r\n  console.log(\"ItemList Rendering\");\r\n  return (\r\n    <div>\r\n      <SortBy />\r\n      {itemList.map((val, i) => (\r\n        <Item key={i} val={val} i={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst SortBy = memo((props) => {\r\n  const { sortBy, handleOnChangeSortBy } = useTdList();\r\n  console.log(\"SortBy Rendering\");\r\n  return (\r\n    <div>\r\n      <label>Sort By </label>\r\n      <select value={sortBy} onChange={handleOnChangeSortBy}>\r\n        <option value=\"\"></option>\r\n        <option value=\"A-Z\">A-Z</option>\r\n        <option value=\"Z-A\">Z-A</option>\r\n      </select>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Item = memo((props) => {\r\n  const { delAt } = useTdList();\r\n  const { val, i } = props;\r\n  console.log(\"Item Rendering\");\r\n  return (\r\n    <div>\r\n      {val}\r\n      <button onClick={() => delAt(i)}>Delete</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ItemList;\r\n","import React, { memo } from \"react\";\r\nimport ItemList from \"./ItemList\";\r\nimport { useTdList } from \"./Contexts\";\r\n\r\nconst TdList = memo((props) => {\r\n  console.log(\"TdList Rendering\");\r\n  return (\r\n    <div>\r\n      <ItemList />\r\n      <InputField />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst InputField = memo((props) => {\r\n  const { inputVal, handleOnChangeInputVal, add } = useTdList();\r\n  console.log(\"InputField Rendering\");\r\n  return (\r\n    <div>\r\n      <input value={inputVal} onChange={handleOnChangeInputVal} />\r\n      <button onClick={add}>Add</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TdList;\r\n","import \"./styles.css\";\r\nimport React, { memo } from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport TdList from \"./TdList\";\r\nimport { useContentContainer } from \"./Contexts\";\r\nimport { CountProvider, TdListProvider } from \"./Contexts\";\r\n\r\nconst HOC = (Component) =>\r\n  class extends React.PureComponent {\r\n    render() {\r\n      console.log(Component, \"HOC Rendering\");\r\n      const { visible, visibleHandler, ...rest } = this.props;\r\n      return (\r\n        <div className=\"HOC\">\r\n          <input type=\"checkbox\" checked={visible} onChange={visibleHandler} />\r\n          <label>visible</label>\r\n          {visible && <Component {...rest} />}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\nconst HOCCounter = HOC(Counter);\r\nconst HOCTdList = HOC(TdList);\r\n\r\nconst ContentContainer = memo((props) => {\r\n  const {\r\n    isCounterVisible,\r\n    isTdListVisible,\r\n    toggleIsCounterVisible,\r\n    toggleIsTdListVisible\r\n  } = useContentContainer();\r\n  console.log(\"ContentContainer Rendering\");\r\n  return (\r\n    <div className=\"ContentContainer\">\r\n      <CountProvider>\r\n        <HOCCounter\r\n          visible={isCounterVisible}\r\n          visibleHandler={toggleIsCounterVisible}\r\n        />\r\n      </CountProvider>\r\n      <TdListProvider>\r\n        <HOCTdList\r\n          visible={isTdListVisible}\r\n          visibleHandler={toggleIsTdListVisible}\r\n        />\r\n      </TdListProvider>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ContentContainer;\r\n","import \"./styles.css\";\nimport ContentContainer from \"./ContentContainer\";\nimport { ContentContainerProvider } from \"./Contexts\";\nimport React, { memo } from \"react\";\n\nfunction App() {\n  console.log(\"App Rendering\");\n  return (\n    <div className=\"App\">\n      <ContentContainerProvider>\n        <ContentContainer />\n      </ContentContainerProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}